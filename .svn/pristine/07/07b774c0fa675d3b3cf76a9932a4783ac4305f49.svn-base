<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcl.dao.FundSettlelogMapper">
  <resultMap id="BaseResultMap" type="com.jcl.pojo.FundSettlelog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="subzh" jdbcType="VARCHAR" property="subzh" />
    <result column="allocbroker" jdbcType="VARCHAR" property="allocbroker" />
    <result column="allocchannel" jdbcType="VARCHAR" property="allocchannel" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="registnum" jdbcType="INTEGER" property="registnum" />
    <result column="addfund" jdbcType="INTEGER" property="addfund" />
    <result column="addBalance" jdbcType="NUMERIC" property="addbalance" />
    <result column="stockfund" jdbcType="INTEGER" property="stockfund" />
    <result column="stockBalance" jdbcType="NUMERIC" property="stockbalance" />
    <result column="feeBalance" jdbcType="NUMERIC" property="feebalance" />
    <result column="deferredBalance" jdbcType="NUMERIC" property="deferredbalance" />
    <result column="feenextBalance" jdbcType="NUMERIC" property="feenextbalance" />
    <result column="overBalance" jdbcType="NUMERIC" property="overbalance" />
    <result column="sumBalance" jdbcType="NUMERIC" property="sumbalance" />
    <result column="settledesc" jdbcType="VARCHAR" property="settledesc" />
    <result column="settletime" jdbcType="TIMESTAMP" property="settletime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="fundtype" jdbcType="INTEGER" property="fundtype" />
    <result column="agentzh" jdbcType="VARCHAR" property="agentzh" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, subzh, allocbroker, allocchannel, phone, name, registnum, addfund, addBalance, 
    stockfund, stockBalance, feeBalance, deferredBalance, feenextBalance, overBalance, 
    sumBalance, settledesc, settletime, createtime, fundtype, agentzh
  </sql>
  <select id="selectByExample" parameterType="com.jcl.pojo.FundSettlelogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund_settlelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fund_settlelog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fund_settlelog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcl.pojo.FundSettlelogExample">
    delete from fund_settlelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcl.pojo.FundSettlelog">
    insert into fund_settlelog (id, subzh, allocbroker, 
      allocchannel, phone, name, 
      registnum, addfund, addBalance, 
      stockfund, stockBalance, feeBalance, 
      deferredBalance, feenextBalance, overBalance, 
      sumBalance, settledesc, settletime, 
      createtime, fundtype, agentzh
      )
    values (#{id,jdbcType=INTEGER}, #{subzh,jdbcType=VARCHAR}, #{allocbroker,jdbcType=VARCHAR}, 
      #{allocchannel,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{registnum,jdbcType=INTEGER}, #{addfund,jdbcType=INTEGER}, #{addbalance,jdbcType=NUMERIC}, 
      #{stockfund,jdbcType=INTEGER}, #{stockbalance,jdbcType=NUMERIC}, #{feebalance,jdbcType=NUMERIC}, 
      #{deferredbalance,jdbcType=NUMERIC}, #{feenextbalance,jdbcType=NUMERIC}, #{overbalance,jdbcType=NUMERIC}, 
      #{sumbalance,jdbcType=NUMERIC}, #{settledesc,jdbcType=VARCHAR}, #{settletime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP}, #{fundtype,jdbcType=INTEGER}, #{agentzh,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jcl.pojo.FundSettlelog">
    insert into fund_settlelog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="subzh != null">
        subzh,
      </if>
      <if test="allocbroker != null">
        allocbroker,
      </if>
      <if test="allocchannel != null">
        allocchannel,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="registnum != null">
        registnum,
      </if>
      <if test="addfund != null">
        addfund,
      </if>
      <if test="addbalance != null">
        addBalance,
      </if>
      <if test="stockfund != null">
        stockfund,
      </if>
      <if test="stockbalance != null">
        stockBalance,
      </if>
      <if test="feebalance != null">
        feeBalance,
      </if>
      <if test="deferredbalance != null">
        deferredBalance,
      </if>
      <if test="feenextbalance != null">
        feenextBalance,
      </if>
      <if test="overbalance != null">
        overBalance,
      </if>
      <if test="sumbalance != null">
        sumBalance,
      </if>
      <if test="settledesc != null">
        settledesc,
      </if>
      <if test="settletime != null">
        settletime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="fundtype != null">
        fundtype,
      </if>
      <if test="agentzh != null">
        agentzh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subzh != null">
        #{subzh,jdbcType=VARCHAR},
      </if>
      <if test="allocbroker != null">
        #{allocbroker,jdbcType=VARCHAR},
      </if>
      <if test="allocchannel != null">
        #{allocchannel,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="registnum != null">
        #{registnum,jdbcType=INTEGER},
      </if>
      <if test="addfund != null">
        #{addfund,jdbcType=INTEGER},
      </if>
      <if test="addbalance != null">
        #{addbalance,jdbcType=NUMERIC},
      </if>
      <if test="stockfund != null">
        #{stockfund,jdbcType=INTEGER},
      </if>
      <if test="stockbalance != null">
        #{stockbalance,jdbcType=NUMERIC},
      </if>
      <if test="feebalance != null">
        #{feebalance,jdbcType=NUMERIC},
      </if>
      <if test="deferredbalance != null">
        #{deferredbalance,jdbcType=NUMERIC},
      </if>
      <if test="feenextbalance != null">
        #{feenextbalance,jdbcType=NUMERIC},
      </if>
      <if test="overbalance != null">
        #{overbalance,jdbcType=NUMERIC},
      </if>
      <if test="sumbalance != null">
        #{sumbalance,jdbcType=NUMERIC},
      </if>
      <if test="settledesc != null">
        #{settledesc,jdbcType=VARCHAR},
      </if>
      <if test="settletime != null">
        #{settletime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="fundtype != null">
        #{fundtype,jdbcType=INTEGER},
      </if>
      <if test="agentzh != null">
        #{agentzh,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcl.pojo.FundSettlelogExample" resultType="java.lang.Long">
    select count(*) from fund_settlelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fund_settlelog
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subzh != null">
        subzh = #{record.subzh,jdbcType=VARCHAR},
      </if>
      <if test="record.allocbroker != null">
        allocbroker = #{record.allocbroker,jdbcType=VARCHAR},
      </if>
      <if test="record.allocchannel != null">
        allocchannel = #{record.allocchannel,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.registnum != null">
        registnum = #{record.registnum,jdbcType=INTEGER},
      </if>
      <if test="record.addfund != null">
        addfund = #{record.addfund,jdbcType=INTEGER},
      </if>
      <if test="record.addbalance != null">
        addBalance = #{record.addbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.stockfund != null">
        stockfund = #{record.stockfund,jdbcType=INTEGER},
      </if>
      <if test="record.stockbalance != null">
        stockBalance = #{record.stockbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.feebalance != null">
        feeBalance = #{record.feebalance,jdbcType=NUMERIC},
      </if>
      <if test="record.deferredbalance != null">
        deferredBalance = #{record.deferredbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.feenextbalance != null">
        feenextBalance = #{record.feenextbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.overbalance != null">
        overBalance = #{record.overbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.sumbalance != null">
        sumBalance = #{record.sumbalance,jdbcType=NUMERIC},
      </if>
      <if test="record.settledesc != null">
        settledesc = #{record.settledesc,jdbcType=VARCHAR},
      </if>
      <if test="record.settletime != null">
        settletime = #{record.settletime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fundtype != null">
        fundtype = #{record.fundtype,jdbcType=INTEGER},
      </if>
      <if test="record.agentzh != null">
        agentzh = #{record.agentzh,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fund_settlelog
    set id = #{record.id,jdbcType=INTEGER},
      subzh = #{record.subzh,jdbcType=VARCHAR},
      allocbroker = #{record.allocbroker,jdbcType=VARCHAR},
      allocchannel = #{record.allocchannel,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      registnum = #{record.registnum,jdbcType=INTEGER},
      addfund = #{record.addfund,jdbcType=INTEGER},
      addBalance = #{record.addbalance,jdbcType=NUMERIC},
      stockfund = #{record.stockfund,jdbcType=INTEGER},
      stockBalance = #{record.stockbalance,jdbcType=NUMERIC},
      feeBalance = #{record.feebalance,jdbcType=NUMERIC},
      deferredBalance = #{record.deferredbalance,jdbcType=NUMERIC},
      feenextBalance = #{record.feenextbalance,jdbcType=NUMERIC},
      overBalance = #{record.overbalance,jdbcType=NUMERIC},
      sumBalance = #{record.sumbalance,jdbcType=NUMERIC},
      settledesc = #{record.settledesc,jdbcType=VARCHAR},
      settletime = #{record.settletime,jdbcType=TIMESTAMP},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      fundtype = #{record.fundtype,jdbcType=INTEGER},
      agentzh = #{record.agentzh,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcl.pojo.FundSettlelog">
    update fund_settlelog
    <set>
      <if test="subzh != null">
        subzh = #{subzh,jdbcType=VARCHAR},
      </if>
      <if test="allocbroker != null">
        allocbroker = #{allocbroker,jdbcType=VARCHAR},
      </if>
      <if test="allocchannel != null">
        allocchannel = #{allocchannel,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="registnum != null">
        registnum = #{registnum,jdbcType=INTEGER},
      </if>
      <if test="addfund != null">
        addfund = #{addfund,jdbcType=INTEGER},
      </if>
      <if test="addbalance != null">
        addBalance = #{addbalance,jdbcType=NUMERIC},
      </if>
      <if test="stockfund != null">
        stockfund = #{stockfund,jdbcType=INTEGER},
      </if>
      <if test="stockbalance != null">
        stockBalance = #{stockbalance,jdbcType=NUMERIC},
      </if>
      <if test="feebalance != null">
        feeBalance = #{feebalance,jdbcType=NUMERIC},
      </if>
      <if test="deferredbalance != null">
        deferredBalance = #{deferredbalance,jdbcType=NUMERIC},
      </if>
      <if test="feenextbalance != null">
        feenextBalance = #{feenextbalance,jdbcType=NUMERIC},
      </if>
      <if test="overbalance != null">
        overBalance = #{overbalance,jdbcType=NUMERIC},
      </if>
      <if test="sumbalance != null">
        sumBalance = #{sumbalance,jdbcType=NUMERIC},
      </if>
      <if test="settledesc != null">
        settledesc = #{settledesc,jdbcType=VARCHAR},
      </if>
      <if test="settletime != null">
        settletime = #{settletime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="fundtype != null">
        fundtype = #{fundtype,jdbcType=INTEGER},
      </if>
      <if test="agentzh != null">
        agentzh = #{agentzh,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcl.pojo.FundSettlelog">
    update fund_settlelog
    set subzh = #{subzh,jdbcType=VARCHAR},
      allocbroker = #{allocbroker,jdbcType=VARCHAR},
      allocchannel = #{allocchannel,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      registnum = #{registnum,jdbcType=INTEGER},
      addfund = #{addfund,jdbcType=INTEGER},
      addBalance = #{addbalance,jdbcType=NUMERIC},
      stockfund = #{stockfund,jdbcType=INTEGER},
      stockBalance = #{stockbalance,jdbcType=NUMERIC},
      feeBalance = #{feebalance,jdbcType=NUMERIC},
      deferredBalance = #{deferredbalance,jdbcType=NUMERIC},
      feenextBalance = #{feenextbalance,jdbcType=NUMERIC},
      overBalance = #{overbalance,jdbcType=NUMERIC},
      sumBalance = #{sumbalance,jdbcType=NUMERIC},
      settledesc = #{settledesc,jdbcType=VARCHAR},
      settletime = #{settletime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      fundtype = #{fundtype,jdbcType=INTEGER},
      agentzh = #{agentzh,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM fund_settlelog 
		ORDER BY id desc
  </select>
  <select id="isExist" resultMap="BaseResultMap">
	select * from fund_settlelog 
	<where>
		1 = 1
		<if test="title != null"> AND name = #{title} </if>
	</where>
  </select>
  <select id="selectSumMoney" resultType="java.lang.Double" parameterType="java.lang.String">
  		select  SUM(${str}) from fund_settlelog where subzh=#{username}
  </select>
  
  
</mapper>