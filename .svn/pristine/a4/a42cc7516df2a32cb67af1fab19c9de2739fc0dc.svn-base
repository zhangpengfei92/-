<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcl.dao.SptMapper" >
  <resultMap id="BaseResultMap" type="com.jcl.pojo.Spt" >
    <id column="merch" property="merch" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="subzh" property="subzh" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="coin" property="coin" jdbcType="DECIMAL" />
    <result column="settleno" property="settleno" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    merch, state, subzh, time, coin, settleno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jcl.pojo.SptExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from spt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from spt
    where merch = #{merch,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from spt
    where merch = #{merch,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcl.pojo.SptExample" >
    delete from spt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcl.pojo.Spt" >
    insert into spt (merch, state, subzh, 
      time, coin, settleno
      )
    values (#{merch,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{subzh,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{coin,jdbcType=DECIMAL}, #{settleno,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jcl.pojo.Spt" >
    insert into spt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="merch != null" >
        merch,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="subzh != null" >
        subzh,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="coin != null" >
        coin,
      </if>
      <if test="settleno != null" >
        settleno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="merch != null" >
        #{merch,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="subzh != null" >
        #{subzh,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="coin != null" >
        #{coin,jdbcType=DECIMAL},
      </if>
      <if test="settleno != null" >
        #{settleno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcl.pojo.SptExample" resultType="java.lang.Integer" >
    select count(*) from spt
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update spt
    <set >
      <if test="record.merch != null" >
        merch = #{record.merch,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.subzh != null" >
        subzh = #{record.subzh,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coin != null" >
        coin = #{record.coin,jdbcType=DECIMAL},
      </if>
      <if test="record.settleno != null" >
        settleno = #{record.settleno,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update spt
    set merch = #{record.merch,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      subzh = #{record.subzh,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      coin = #{record.coin,jdbcType=DECIMAL},
      settleno = #{record.settleno,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcl.pojo.Spt" >
    update spt
    <set >
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="subzh != null" >
        subzh = #{subzh,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="coin != null" >
        coin = #{coin,jdbcType=DECIMAL},
      </if>
      <if test="settleno != null" >
        settleno = #{settleno,jdbcType=VARCHAR},
      </if>
    </set>
    where merch = #{merch,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcl.pojo.Spt" >
    update spt
    set state = #{state,jdbcType=VARCHAR},
      subzh = #{subzh,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      coin = #{coin,jdbcType=DECIMAL},
      settleno = #{settleno,jdbcType=VARCHAR}
    where merch = #{merch,jdbcType=VARCHAR}
  </update>
</mapper>