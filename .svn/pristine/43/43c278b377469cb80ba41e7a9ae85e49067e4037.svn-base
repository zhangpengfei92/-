<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcl.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.jcl.pojo.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="pubtime" jdbcType="TIMESTAMP" property="pubtime" />
    <result column="pubuser" jdbcType="VARCHAR" property="pubuser" />
    <result column="recever" jdbcType="VARCHAR" property="recever" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="userid" jdbcType="NUMERIC" property="userid" />
    <result column="agentzh" jdbcType="VARCHAR" property="agentzh" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jcl.pojo.Notice">
    <result column="content" jdbcType="CLOB" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, type, pubtime, pubuser, recever, summary, userid, agentzh
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jcl.pojo.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jcl.pojo.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcl.pojo.NoticeExample">
    delete from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcl.pojo.Notice">
    insert into notice (id, title, type, 
      pubtime, pubuser, recever, 
      summary, userid, agentzh, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{pubtime,jdbcType=TIMESTAMP}, #{pubuser,jdbcType=VARCHAR}, #{recever,jdbcType=VARCHAR}, 
      #{summary,jdbcType=VARCHAR}, #{userid,jdbcType=NUMERIC}, #{agentzh,jdbcType=VARCHAR}, 
      #{content,jdbcType=CLOB})
  </insert>
  <insert id="insertSelective" parameterType="com.jcl.pojo.Notice">
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="pubtime != null">
        pubtime,
      </if>
      <if test="pubuser != null">
        pubuser,
      </if>
      <if test="recever != null">
        recever,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="agentzh != null">
        agentzh,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="pubtime != null">
        #{pubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pubuser != null">
        #{pubuser,jdbcType=VARCHAR},
      </if>
      <if test="recever != null">
        #{recever,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=NUMERIC},
      </if>
      <if test="agentzh != null">
        #{agentzh,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcl.pojo.NoticeExample" resultType="java.lang.Long">
    select count(*) from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.pubtime != null">
        pubtime = #{record.pubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pubuser != null">
        pubuser = #{record.pubuser,jdbcType=VARCHAR},
      </if>
      <if test="record.recever != null">
        recever = #{record.recever,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=NUMERIC},
      </if>
      <if test="record.agentzh != null">
        agentzh = #{record.agentzh,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=CLOB},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      pubtime = #{record.pubtime,jdbcType=TIMESTAMP},
      pubuser = #{record.pubuser,jdbcType=VARCHAR},
      recever = #{record.recever,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=NUMERIC},
      agentzh = #{record.agentzh,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=CLOB}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      pubtime = #{record.pubtime,jdbcType=TIMESTAMP},
      pubuser = #{record.pubuser,jdbcType=VARCHAR},
      recever = #{record.recever,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=NUMERIC},
      agentzh = #{record.agentzh,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcl.pojo.Notice">
    update notice
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="pubtime != null">
        pubtime = #{pubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pubuser != null">
        pubuser = #{pubuser,jdbcType=VARCHAR},
      </if>
      <if test="recever != null">
        recever = #{recever,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=NUMERIC},
      </if>
      <if test="agentzh != null">
        agentzh = #{agentzh,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=CLOB},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jcl.pojo.Notice">
    update notice
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      pubtime = #{pubtime,jdbcType=TIMESTAMP},
      pubuser = #{pubuser,jdbcType=VARCHAR},
      recever = #{recever,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=NUMERIC},
      agentzh = #{agentzh,jdbcType=VARCHAR},
      content = #{content,jdbcType=CLOB}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcl.pojo.Notice">
    update notice
    set title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      pubtime = #{pubtime,jdbcType=TIMESTAMP},
      pubuser = #{pubuser,jdbcType=VARCHAR},
      recever = #{recever,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=NUMERIC},
      agentzh = #{agentzh,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>