<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcl.dao.ExceptOrderMapper">
  <resultMap id="BaseResultMap" type="com.jcl.pojo.ExceptOrder">
    <result column="id" jdbcType="NUMERIC" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="mainzh" jdbcType="VARCHAR" property="mainzh" />
    <result column="market" jdbcType="TINYINT" property="market" />
    <result column="hycode" jdbcType="VARCHAR" property="hycode" />
    <result column="hypz" jdbcType="VARCHAR" property="hypz" />
    <result column="direction" jdbcType="TINYINT" property="direction" />
    <result column="vol" jdbcType="INTEGER" property="vol" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="userid" jdbcType="NUMERIC" property="userid" />
    <result column="agentzh" jdbcType="VARCHAR" property="agentzh" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, mainzh, market, hycode, hypz, direction, vol, price, order_time, reason, 
    userid, agentzh
  </sql>
  <select id="selectByExample" parameterType="com.jcl.pojo.ExceptOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from EXCEPT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jcl.pojo.ExceptOrderExample">
    delete from EXCEPT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcl.pojo.ExceptOrder">
    insert into EXCEPT_ORDER (id, user_id, mainzh, 
      market, hycode, hypz, 
      direction, vol, price, 
      order_time, reason, userid, 
      agentzh)
    values (#{id,jdbcType=NUMERIC}, #{userId,jdbcType=VARCHAR}, #{mainzh,jdbcType=VARCHAR}, 
      #{market,jdbcType=TINYINT}, #{hycode,jdbcType=VARCHAR}, #{hypz,jdbcType=VARCHAR}, 
      #{direction,jdbcType=TINYINT}, #{vol,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{orderTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=VARCHAR}, #{userid,jdbcType=NUMERIC}, 
      #{agentzh,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jcl.pojo.ExceptOrder">
    insert into EXCEPT_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="mainzh != null">
        mainzh,
      </if>
      <if test="market != null">
        market,
      </if>
      <if test="hycode != null">
        hycode,
      </if>
      <if test="hypz != null">
        hypz,
      </if>
      <if test="direction != null">
        direction,
      </if>
      <if test="vol != null">
        vol,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="agentzh != null">
        agentzh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="mainzh != null">
        #{mainzh,jdbcType=VARCHAR},
      </if>
      <if test="market != null">
        #{market,jdbcType=TINYINT},
      </if>
      <if test="hycode != null">
        #{hycode,jdbcType=VARCHAR},
      </if>
      <if test="hypz != null">
        #{hypz,jdbcType=VARCHAR},
      </if>
      <if test="direction != null">
        #{direction,jdbcType=TINYINT},
      </if>
      <if test="vol != null">
        #{vol,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=NUMERIC},
      </if>
      <if test="agentzh != null">
        #{agentzh,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcl.pojo.ExceptOrderExample" resultType="java.lang.Long">
    select count(*) from EXCEPT_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update EXCEPT_ORDER
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.mainzh != null">
        mainzh = #{record.mainzh,jdbcType=VARCHAR},
      </if>
      <if test="record.market != null">
        market = #{record.market,jdbcType=TINYINT},
      </if>
      <if test="record.hycode != null">
        hycode = #{record.hycode,jdbcType=VARCHAR},
      </if>
      <if test="record.hypz != null">
        hypz = #{record.hypz,jdbcType=VARCHAR},
      </if>
      <if test="record.direction != null">
        direction = #{record.direction,jdbcType=TINYINT},
      </if>
      <if test="record.vol != null">
        vol = #{record.vol,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=NUMERIC},
      </if>
      <if test="record.agentzh != null">
        agentzh = #{record.agentzh,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update EXCEPT_ORDER
    set id = #{record.id,jdbcType=NUMERIC},
      user_id = #{record.userId,jdbcType=VARCHAR},
      mainzh = #{record.mainzh,jdbcType=VARCHAR},
      market = #{record.market,jdbcType=TINYINT},
      hycode = #{record.hycode,jdbcType=VARCHAR},
      hypz = #{record.hypz,jdbcType=VARCHAR},
      direction = #{record.direction,jdbcType=TINYINT},
      vol = #{record.vol,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      reason = #{record.reason,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=NUMERIC},
      agentzh = #{record.agentzh,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>