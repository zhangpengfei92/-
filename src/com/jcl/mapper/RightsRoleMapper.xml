<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcl.dao.RightsRoleMapper">
  <resultMap id="BaseResultMap" type="com.jcl.pojo.RightsRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="descript" jdbcType="VARCHAR" property="descript" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="columnId" jdbcType="INTEGER" property="columnId" />
    <result column="columnName" jdbcType="VARCHAR" property="columnname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, roleName, keyword, descript, createtime
  </sql>
  <select id="selectByExample" parameterType="com.jcl.pojo.RightsRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rights_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rights_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rights_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcl.pojo.RightsRoleExample">
    delete from rights_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcl.pojo.RightsRole">
    insert into rights_role (id, roleName, keyword, 
      descript, createtime)
    values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, 
      #{descript,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jcl.pojo.RightsRole" useGeneratedKeys="true" keyProperty="id">
    insert into rights_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="descript != null">
        descript,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="descript != null">
        #{descript,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcl.pojo.RightsRoleExample" resultType="java.lang.Long">
    select count(*) from rights_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rights_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rolename != null">
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.keyword != null">
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.descript != null">
        descript = #{record.descript,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rights_role
    set id = #{record.id,jdbcType=INTEGER},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      descript = #{record.descript,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcl.pojo.RightsRole">
    update rights_role
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="descript != null">
        descript = #{descript,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcl.pojo.RightsRole">
    update rights_role
    set roleName = #{rolename,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      descript = #{descript,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteRightsRolePerByRightsRoleId" parameterType="Integer">
	 delete from rights_rcrel where roleId=#{roleId}
  </delete>
  
  <insert id="insertRightsRolePer" >
	insert into rights_rcrel (roleId,columnId,createTime) values (#{roleId},#{perId},#{createTime})
  </insert>
  
  <select id="getListByLikeName" resultMap="BaseResultMap" >
	 select * from rights_role 
	<where>
		1 = 1
		<if test="name != null"> AND roleName like #{name} </if>
	</where>
	order by id asc,createtime asc
</select>

<select id="selectById" resultMap="BaseResultMap" parameterType="Integer">
	 select r.*,p.columnName,p.id as columnId from rights_role r left join rights_rcrel rp on rp.roleId=r.id left join rights_column p on p.id = rp.columnId where r.id = #{id}
</select>

<select id="isExist" resultMap="BaseResultMap" >
	 select * from rights_role 
	<where>
		1 = 1
		<if test="name != null"> AND roleName = #{name} </if>
	</where>
</select>
  
</mapper>