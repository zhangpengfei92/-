<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcl.dao.SysuserMapper">
	<resultMap id="BaseResultMap" type="com.jcl.pojo.Sysuser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="sysRights" property="sysrights" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="modifytime" property="modifytime" jdbcType="TIMESTAMP" />
		<collection property="roleList" ofType="com.jcl.pojo.Role">
			<id column="role_id" jdbcType="INTEGER" property="id" />
			<result column="role_name" jdbcType="VARCHAR" property="name" />
			<collection property="perlist" ofType="com.jcl.pojo.Permission">
			       <id column="p_id" jdbcType="INTEGER" property="pId" />
			       	<result column="pri_name" jdbcType="VARCHAR" property="priName" />
			</collection>
		</collection>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, username, password, nickname, sysRights, status,
		modifytime
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jcl.pojo.SysuserExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from sys_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user where username =#{username}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM sys_user
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sys_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.jcl.pojo.SysuserExample">
		delete from sys_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.jcl.pojo.Sysuser" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user (id,
		username, password,
		nickname, sysRights, status,
		modifytime)
		values
		(#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR},
		#{sysrights,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
		#{modifytime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.jcl.pojo.Sysuser" useGeneratedKeys="true" keyProperty="id">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="sysrights != null">
				sysRights,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="modifytime != null">
				modifytime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sysrights != null">
				#{sysrights,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="modifytime != null">
				#{modifytime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.jcl.pojo.SysuserExample"
		resultType="java.lang.Integer">
		select count(*) from sys_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sys_user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				username = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.nickname != null">
				nickname = #{record.nickname,jdbcType=VARCHAR},
			</if>
			<if test="record.sysrights != null">
				sysRights = #{record.sysrights,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.modifytime != null">
				modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update sys_user
		set id = #{record.id,jdbcType=INTEGER},
		username =
		#{record.username,jdbcType=VARCHAR},
		password =
		#{record.password,jdbcType=VARCHAR},
		nickname =
		#{record.nickname,jdbcType=VARCHAR},
		sysRights =
		#{record.sysrights,jdbcType=VARCHAR},
		status =
		#{record.status,jdbcType=INTEGER},
		modifytime =
		#{record.modifytime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.jcl.pojo.Sysuser">
		update sys_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sysrights != null">
				sysRights = #{sysrights,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="modifytime != null">
				modifytime = #{modifytime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jcl.pojo.Sysuser">
		update sys_user
		set username = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		nickname = #{nickname,jdbcType=VARCHAR},
		sysRights = #{sysrights,jdbcType=VARCHAR},
		status =
		#{status,jdbcType=INTEGER},
		modifytime =
		#{modifytime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<delete id="deleteUserRoleByUserId" parameterType="Integer">
	   delete from sysuser_role where userid=#{sys_userId}
    </delete>
    
    <insert id="insertUserRole" >
		insert into sysuser_role (rid,userid,createTime) values (#{roleId},#{sys_userId},#{createTime})
    </insert>
    
    <select id="getlistByAdmin" resultMap="BaseResultMap" parameterType="Integer">
	select 
	s.id,s.username,s.password,s.nickname,s.sysrights,s.status,s.modifytime,r.lsh as role_id,r.name as role_name
	 from sys_user s left join sysuser_role
	 sr on sr.userid=s.id left join role r on r.lsh=sr.rid where s.id = #{sys_userId}
	</select>
	
    <select id="getListByLikeName" resultMap="BaseResultMap" >
	select 
	s.id,s.username,s.password,s.nickname,s.sysrights,s.status,s.modifytime,r.lsh as role_id,r.name as role_name
	 from sys_user s left join sysuser_role
	 sr on sr.userid=s.id left join role r on r.lsh=sr.rid 
	 <if test="username != null">
		 where s.username like #{username}
	</if>
	</select>
    
    <select id="selectByRoleAndPer" resultMap="BaseResultMap">
	select * from sys_user s left join sysuser_role sr on sr.userid=s.id 
		left join role r on r.lsh=sr.rid
		left join role_permission rp on rp.rid = r.lsh left join  permission p  on p.p_id = rp.pid where s.username=#{username}
	</select>
	
	<select id="isExist" resultMap="BaseResultMap" >
	select * from sys_user 
	<where>
		1 = 1
		<if test="username != null"> AND username = #{username} </if>
	</where>
	</select>
    
</mapper>