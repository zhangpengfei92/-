<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcl.dao.FeeSchemeMapper">
  <resultMap id="BaseResultMap" type="com.jcl.pojo.FeeScheme">
    <id column="lsh" jdbcType="INTEGER" property="lsh" />
    <result column="schemeType" jdbcType="TINYINT" property="schemetype" />
    <result column="direction" jdbcType="VARCHAR" property="direction" />
    <result column="percentage" jdbcType="NUMERIC" property="percentage" />
    <result column="lowfee" jdbcType="DECIMAL" property="lowfee" />
    <result column="schemeName" jdbcType="VARCHAR" property="schemename" />
    <result column="showStatus" jdbcType="TINYINT" property="showstatus" />
    <result column="feeSchemeId" jdbcType="INTEGER" property="feeschemeid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    lsh, schemeType, direction, percentage, lowfee, schemeName, showStatus, feeSchemeId
  </sql>
  <select id="selectByExample" parameterType="com.jcl.pojo.FeeSchemeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fee_scheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fee_scheme
    where lsh = #{lsh,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fee_scheme
    where lsh = #{lsh,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcl.pojo.FeeSchemeExample">
    delete from fee_scheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcl.pojo.FeeScheme">
    insert into fee_scheme (lsh, schemeType, direction, 
      percentage, lowfee, schemeName, 
      showStatus, feeSchemeId)
    values (#{lsh,jdbcType=INTEGER}, #{schemetype,jdbcType=TINYINT}, #{direction,jdbcType=VARCHAR}, 
      #{percentage,jdbcType=NUMERIC}, #{lowfee,jdbcType=DECIMAL}, #{schemename,jdbcType=VARCHAR}, 
      #{showstatus,jdbcType=TINYINT}, #{feeschemeid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jcl.pojo.FeeScheme">
    insert into fee_scheme
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lsh != null">
        lsh,
      </if>
      <if test="schemetype != null">
        schemeType,
      </if>
      <if test="direction != null">
        direction,
      </if>
      <if test="percentage != null">
        percentage,
      </if>
      <if test="lowfee != null">
        lowfee,
      </if>
      <if test="schemename != null">
        schemeName,
      </if>
      <if test="showstatus != null">
        showStatus,
      </if>
      <if test="feeschemeid != null">
        feeSchemeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lsh != null">
        #{lsh,jdbcType=INTEGER},
      </if>
      <if test="schemetype != null">
        #{schemetype,jdbcType=TINYINT},
      </if>
      <if test="direction != null">
        #{direction,jdbcType=VARCHAR},
      </if>
      <if test="percentage != null">
        #{percentage,jdbcType=NUMERIC},
      </if>
      <if test="lowfee != null">
        #{lowfee,jdbcType=DECIMAL},
      </if>
      <if test="schemename != null">
        #{schemename,jdbcType=VARCHAR},
      </if>
      <if test="showstatus != null">
        #{showstatus,jdbcType=TINYINT},
      </if>
      <if test="feeschemeid != null">
        #{feeschemeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcl.pojo.FeeSchemeExample" resultType="java.lang.Long">
    select count(*) from fee_scheme
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fee_scheme
    <set>
      <if test="record.lsh != null">
        lsh = #{record.lsh,jdbcType=INTEGER},
      </if>
      <if test="record.schemetype != null">
        schemeType = #{record.schemetype,jdbcType=TINYINT},
      </if>
      <if test="record.direction != null">
        direction = #{record.direction,jdbcType=VARCHAR},
      </if>
      <if test="record.percentage != null">
        percentage = #{record.percentage,jdbcType=NUMERIC},
      </if>
      <if test="record.lowfee != null">
        lowfee = #{record.lowfee,jdbcType=DECIMAL},
      </if>
      <if test="record.schemename != null">
        schemeName = #{record.schemename,jdbcType=VARCHAR},
      </if>
      <if test="record.showstatus != null">
        showStatus = #{record.showstatus,jdbcType=TINYINT},
      </if>
      <if test="record.feeschemeid != null">
        feeSchemeId = #{record.feeschemeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fee_scheme
    set lsh = #{record.lsh,jdbcType=INTEGER},
      schemeType = #{record.schemetype,jdbcType=TINYINT},
      direction = #{record.direction,jdbcType=VARCHAR},
      percentage = #{record.percentage,jdbcType=NUMERIC},
      lowfee = #{record.lowfee,jdbcType=DECIMAL},
      schemeName = #{record.schemename,jdbcType=VARCHAR},
      showStatus = #{record.showstatus,jdbcType=TINYINT},
      feeSchemeId = #{record.feeschemeid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcl.pojo.FeeScheme">
    update fee_scheme
    <set>
      <if test="schemetype != null">
        schemeType = #{schemetype,jdbcType=TINYINT},
      </if>
      <if test="direction != null">
        direction = #{direction,jdbcType=VARCHAR},
      </if>
      <if test="percentage != null">
        percentage = #{percentage,jdbcType=NUMERIC},
      </if>
      <if test="lowfee != null">
        lowfee = #{lowfee,jdbcType=DECIMAL},
      </if>
      <if test="schemename != null">
        schemeName = #{schemename,jdbcType=VARCHAR},
      </if>
      <if test="showstatus != null">
        showStatus = #{showstatus,jdbcType=TINYINT},
      </if>
      <if test="feeschemeid != null">
        feeSchemeId = #{feeschemeid,jdbcType=INTEGER},
      </if>
    </set>
    where lsh = #{lsh,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcl.pojo.FeeScheme">
    update fee_scheme
    set schemeType = #{schemetype,jdbcType=TINYINT},
      direction = #{direction,jdbcType=VARCHAR},
      percentage = #{percentage,jdbcType=NUMERIC},
      lowfee = #{lowfee,jdbcType=DECIMAL},
      schemeName = #{schemename,jdbcType=VARCHAR},
      showStatus = #{showstatus,jdbcType=TINYINT},
      feeSchemeId = #{feeschemeid,jdbcType=INTEGER}
    where lsh = #{lsh,jdbcType=INTEGER}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM fee_scheme 
		ORDER BY lsh desc
  </select>
  <select id="isExist" resultMap="BaseResultMap" >
	select * from fee_scheme 
	<where>
		1 = 1
		<if test="subzhName != null"> AND schemeName = #{subzhName} </if>
	</where>
  </select>
  
</mapper>